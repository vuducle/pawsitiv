# Basic worker process settings
worker_processes auto;
pid /run/nginx.pid;
# include /etc/nginx/modules-enabled/*.conf; # Often not needed unless modules are explicitly used

events {
    worker_connections 768;
    # multi_accept on;
}

http {
    # Define the upstream server (our Express app)
    upstream express_app {
        # CORRECTED: Use the service name 'application' from docker-compose.yml
        server application:3669;
    }

    # Basic settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # SSL settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    # Recommend adding strong cipher list:
    # ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384';

    # Logging Settings - path matches volume mount
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # Gzip Settings
    gzip on;
    gzip_vary on; # Recommended
    gzip_proxied any; # Recommended if behind another proxy/LB
    gzip_comp_level 6; # Good balance
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript image/svg+xml; # Added more types

    # Server block for HTTP (Port 80) - Redirects to HTTPS
    server {
        listen 80;
        server_name localhost; # Or your actual domain name

        # Health check endpoint (optional - useful for monitoring)
        # location /healthz {
        #    access_log off;
        #    return 200 "OK";
        # }

        location / {
            # Redirect all other HTTP requests to HTTPS
            return 301 https://$host$request_uri;
        }
    }

    # Server block for HTTPS (Port 443)
    server {
        listen 443 ssl http2; # Enable SSL and HTTP/2
        server_name localhost; # Or your actual domain name

        # SSL Certificate paths (inside the container) - paths match volume mounts
        ssl_certificate /etc/ssl/certs/nginx-selfsigned.crt;
        ssl_certificate_key /etc/ssl/private/nginx-selfsigned.key;

        # Optional: Add HSTS header for security (uncomment after testing)
        # add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

        # Location for the proxied application
        location / {
            # CORRECTED: proxy_pass uses the correct upstream name defined above
            proxy_pass http://express_app;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade"; # Correct header name for WebSocket/SSE
            proxy_read_timeout 86400;
        }

        # Location for the static documentation files
        location /doc {
            # alias path matches the volume mount target in docker-compose.yml
            alias /usr/share/nginx/frontend;
            try_files $uri $uri/ /index.html =404; # Try file, then directory (serving index.html), then fallback to index.html in that dir, else 404
            index index.html;
        }

        # Optional: Deny access to hidden files in static content
        location ~ /\. {
           deny all;
        }
    }
}